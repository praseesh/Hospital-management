# Generated by Django 5.0.6 on 2024-06-29 11:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctor', '0001_initial'),
        ('patient', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation', models.CharField(max_length=50)),
                ('reference_value', models.CharField(max_length=20)),
                ('unit', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'ct',
            },
        ),
        migrations.CreateModel(
            name='KFT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation', models.CharField(max_length=50)),
                ('reference_value', models.CharField(max_length=20)),
                ('unit', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'kft',
            },
        ),
        migrations.CreateModel(
            name='LFT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation', models.CharField(max_length=50)),
                ('reference_value', models.CharField(max_length=20)),
                ('unit', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'lft',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('strength', models.CharField(max_length=50)),
                ('expiry_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'medicine',
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='ST',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation', models.CharField(max_length=50)),
                ('reference_value', models.CharField(max_length=20)),
                ('unit', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'st',
            },
        ),
        migrations.CreateModel(
            name='StaffAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('url_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'db_table': 'staff_action',
            },
        ),
        migrations.CreateModel(
            name='CholesterolTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('investigation', models.CharField(default='Total Cholesterol, LDL Cholesterol (Low-Density Lipoprotein), HDL Cholesterol (High-Density Lipoprotein), Triglycerides', max_length=255)),
                ('reference_value', models.CharField(default='< 200, < 100, > 40, < 150', max_length=255)),
                ('unit', models.CharField(default='mg/dL, mg/dL, mg/dL, mg/dL', max_length=255)),
                ('price', models.CharField(default='', max_length=100)),
                ('patient', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
            options={
                'db_table': 'cholesterol_test',
            },
        ),
        migrations.CreateModel(
            name='KidneyFunctionTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('investigation', models.CharField(default='Urea, Creatinine, Uric Acid, Calcium, Total, Phosphorus, Alkaline Phosphatase (ALP), Total Protein, Albumin, Sodium, Potassium, Chloride', max_length=255)),
                ('reference_value', models.CharField(default='13 - 43, 0.7 - 1.3, 3.5 - 7.2, 8.7 - 10.4, 2.4 - 5.1, 30 - 120, 5.7 - 8.2, 3.2 - 4.8, 136 - 145, 3.5 - 5.1, 98 - 107', max_length=255)),
                ('unit', models.CharField(default='mg/dL, mg/dL, mg/dL, mg/dL, mg/dL, U/L, g/dL, g/dL, mEq/L, mEq/L, mEq/L', max_length=255)),
                ('price', models.CharField(default='', max_length=100)),
                ('patient', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
            options={
                'db_table': 'kidney_function_test',
            },
        ),
        migrations.CreateModel(
            name='LiverFunctionTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('is_completed', models.BooleanField(default=False)),
                ('investigation', models.CharField(default='Total Bilirubin, Direct Bilirubin, Indirect Bilirubin, Aspartate Aminotransferase (AST/SGOT), Alanine Aminotransferase (ALT/SGPT), Alkaline Phosphatase (ALP), Total Protein, Albumin, Globulin, Albumin/Globulin Ratio', max_length=255)),
                ('result', models.CharField(max_length=255)),
                ('reference_value', models.CharField(default='0.1 - 1.2, 0.0 - 0.4, 0.1 - 0.8, 5 - 40, 7 - 56, 30 - 120, 6.0 - 8.3, 3.5 - 5.0, 2.0 - 3.5, 1.0 - 2', max_length=255)),
                ('unit', models.CharField(default='mg/dL, mg/dL, mg/dL, U/L, U/L, U/L, g/dL, g/dL, g/dL, ratio', max_length=255)),
                ('patient', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
            options={
                'db_table': 'liver_function_test',
            },
        ),
        migrations.CreateModel(
            name='PatientBills',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine_bill', models.IntegerField(default=0)),
                ('lab_report_bill', models.IntegerField(default=0)),
                ('is_completed', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.room')),
            ],
            options={
                'db_table': 'patient_bills',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_no', models.CharField(max_length=50)),
                ('room_charges', models.IntegerField(blank=True, null=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('paypal', 'PayPal'), ('razorpay', 'Razorpay')], max_length=255)),
                ('description', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('date', models.DateField(auto_now_add=True)),
                ('patient_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
                ('bill_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.patientbills')),
            ],
            options={
                'db_table': 'invoice',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('medication', models.CharField(max_length=255)),
                ('dosage', models.CharField(max_length=50)),
                ('frequency', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('instructions', models.TextField(blank=True)),
                ('created_by', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_last_modified', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='doctor.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
            options={
                'db_table': 'prescriptions',
            },
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(default='', max_length=255)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(default='default_city', max_length=50)),
                ('joined', models.DateField(blank=True, null=True)),
                ('salary', models.IntegerField()),
                ('contact', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(max_length=255, null=True, unique=True)),
                ('password', models.CharField(default='1234', max_length=255)),
                ('is_deleted', models.BooleanField(default=False)),
                ('role', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='staff.roles')),
            ],
            options={
                'db_table': 'staff',
            },
        ),
        migrations.CreateModel(
            name='StaffActionRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='staff.staffaction')),
                ('role', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='staff.roles')),
            ],
            options={
                'db_table': 'staff_action_roles',
            },
        ),
        migrations.CreateModel(
            name='SugarTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('investigation', models.CharField(default='Fasting Blood Sugar, Postprandial Blood Sugar, Random Blood Sugar, HbA1c, Oral Glucose Tolerance Test (OGTT)', max_length=255)),
                ('result', models.CharField(max_length=255)),
                ('reference_value', models.CharField(default='70 - 100, 70 - 140, 70 - 140, 4.0 - 5.6, 140 - 199', max_length=255)),
                ('unit', models.CharField(default='mg/dL, mg/dL, mg/dL, %, mg/dL', max_length=255)),
                ('price', models.IntegerField()),
                ('is_completed', models.BooleanField(default=False)),
                ('patient', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
            options={
                'db_table': 'sugar_test',
            },
        ),
        migrations.CreateModel(
            name='LabReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField(default=0)),
                ('result', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cholesterol_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.cholesteroltest')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.doctor')),
                ('kidney_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.kidneyfunctiontest')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
                ('liver_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.liverfunctiontest')),
                ('sugar_test', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='staff.sugartest')),
            ],
            options={
                'db_table': 'lab_report',
            },
        ),
    ]
